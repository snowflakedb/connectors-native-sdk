-- Copyright (c) 2024 Snowflake Inc.

EXECUTE IMMEDIATE FROM 'connectors-sdk-components/all.sql';
EXECUTE IMMEDIATE FROM 'connectors-sdk-components/task_reactor.sql';

-- SNOWFLAKE REFERENCE MECHANISM
CREATE OR REPLACE PROCEDURE PUBLIC.REGISTER_REFERENCE(ref_name STRING, operation STRING, ref_or_alias STRING)
    RETURNS STRING
    LANGUAGE SQL
    AS
    BEGIN
        CASE (operation)
            WHEN 'ADD' THEN
                SELECT SYSTEM$SET_REFERENCE(:ref_name, :ref_or_alias);
            WHEN 'REMOVE' THEN
                SELECT SYSTEM$REMOVE_REFERENCE(:ref_name);
            WHEN 'CLEAR' THEN
                SELECT SYSTEM$REMOVE_REFERENCE(:ref_name);
            ELSE RETURN 'unknown operation: ' || operation;
        END CASE;
        RETURN NULL;
    END;

GRANT USAGE ON PROCEDURE PUBLIC.REGISTER_REFERENCE(STRING, STRING, STRING) TO APPLICATION ROLE ADMIN;

CREATE OR REPLACE PROCEDURE PUBLIC.TEST_CONNECTION()
    RETURNS VARIANT
    LANGUAGE SQL
    EXECUTE AS OWNER
    AS
    BEGIN
        RETURN OBJECT_CONSTRUCT('response_code', 'OK', 'message', 'This is TEST_CONNECTION mock only procedure returning OK response code');
    END;

-----------------TASK REACTOR-----------------
CREATE OR REPLACE PROCEDURE PUBLIC.TEST_WORKER(worker_id number, task_reactor_schema string)
    RETURNS STRING
    LANGUAGE JAVA
    RUNTIME_VERSION = '11'
    PACKAGES = ('com.snowflake:snowpark:1.14.0', 'com.snowflake:telemetry:0.1.0')
    IMPORTS = ('/connectors-native-sdk.jar', '/benchmark-native-sdk-app.jar')
    HANDLER = 'com.snowflake.connectors.example.ingestion.BenchmarkWorker.executeWork';


CALL TASK_REACTOR.CREATE_INSTANCE_OBJECTS(
        'TR_BENCHMARK_INSTANCE',
        'PUBLIC.TEST_WORKER',
        'VIEW',
        'TR_BENCHMARK_INSTANCE.WORK_SELECTOR_VIEW',
        NULL
    );

CREATE OR REPLACE VIEW TR_BENCHMARK_INSTANCE.WORK_SELECTOR_VIEW AS SELECT * FROM TR_BENCHMARK_INSTANCE.QUEUE;

GRANT USAGE ON SCHEMA TASK_REACTOR TO APPLICATION ROLE ADMIN;
GRANT USAGE ON PROCEDURE TASK_REACTOR.INITIALIZE_INSTANCE(VARCHAR, VARCHAR, BOOLEAN, VARCHAR, BOOLEAN, VARCHAR) TO APPLICATION ROLE ADMIN;
GRANT USAGE ON PROCEDURE TASK_REACTOR.SET_WORKERS_NUMBER(NUMBER, VARCHAR) TO APPLICATION ROLE ADMIN;

GRANT USAGE ON SCHEMA TR_BENCHMARK_INSTANCE TO APPLICATION ROLE ADMIN;
GRANT SELECT ON TABLE TR_BENCHMARK_INSTANCE.QUEUE TO APPLICATION ROLE ADMIN;
GRANT INSERT ON TABLE TR_BENCHMARK_INSTANCE.QUEUE TO APPLICATION ROLE ADMIN;
